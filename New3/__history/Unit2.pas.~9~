unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.DBCtrls, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.Menus,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TForm2 = class(TForm)
    Label1: TLabel;
    DBGrid1: TDBGrid;
    btnAdicionar: TButton;
    btnDelete: TButton;
    btnAbrir: TButton;
    StatusBar1: TStatusBar;
    DBNavigator1: TDBNavigator;
    btnNovo: TButton;
    MainMenu1: TMainMenu;
    Letras1: TMenuItem;
    Playlists1: TMenuItem;
    Relatrios1: TMenuItem;
    FDQuery2: TFDQuery;
    procedure Letras1Click(Sender: TObject);
    procedure Playlists1Click(Sender: TObject);
    procedure Relatrios1Click(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure btnAdicionarClick(Sender: TObject);
    procedure btnDeleteClick(Sender: TObject);
    procedure btnAbrirClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
  private
    { Private declarations }
    procedure AtualizarStatusBar;
    procedure ConfigurarBotoes;
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

uses Unit1, Unit3, Unit4;

procedure TForm2.FormCreate(Sender: TObject);
begin
  ConfigurarBotoes;
  AtualizarStatusBar;
end;

procedure TForm2.ConfigurarBotoes;
begin
  // Configurar propriedades dos botões
  btnNovo.Caption := 'Novo';
  btnNovo.Hint := 'Criar novo registro';
  btnNovo.ShowHint := True;

  btnAdicionar.Caption := 'Salvar';
  btnAdicionar.Hint := 'Salvar alterações';
  btnAdicionar.ShowHint := True;

  btnDelete.Caption := 'Excluir';
  btnDelete.Hint := 'Excluir registro selecionado';
  btnDelete.ShowHint := True;

  btnAbrir.Caption := 'Abrir';
  btnAbrir.Hint := 'Abrir/Editar registro selecionado';
  btnAbrir.ShowHint := True;

  // Configurar estados iniciais
  btnAdicionar.Enabled := False;
  btnDelete.Enabled := False;
  btnAbrir.Enabled := False;
end;

procedure TForm2.AtualizarStatusBar;
begin
  if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
  begin
    if DataModule4.FDQuery1.Active then
      StatusBar1.SimpleText := Format('Total de registros: %d', [DataModule4.FDQuery1.RecordCount])
    else
      StatusBar1.SimpleText := 'Nenhum dataset ativo';
  end
  else
    StatusBar1.SimpleText := 'Pronto';
end;

procedure TForm2.btnNovoClick(Sender: TObject);
begin
  try
    if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
    begin
      DataModule4.FDQuery1.Append;
      btnAdicionar.Enabled := True;
      btnDelete.Enabled := False;
      btnAbrir.Enabled := False;
      StatusBar1.SimpleText := 'Modo inserção - Digite os dados e clique em Salvar';
    end
    else
      ShowMessage('DataModule não está disponível');
  except
    on E: Exception do
      ShowMessage('Erro ao criar novo registro: ' + E.Message);
  end;
end;

procedure TForm2.btnAdicionarClick(Sender: TObject);
begin
  try
    if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
    begin
      if DataModule4.FDQuery1.State in [dsInsert, dsEdit] then
      begin
        DataModule4.FDQuery1.Post;
        ShowMessage('Registro salvo com sucesso!');
        AtualizarStatusBar;
        ConfigurarBotoes;

        // Reativar botões após salvar
        btnDelete.Enabled := not DataModule4.FDQuery1.IsEmpty;
        btnAbrir.Enabled := not DataModule4.FDQuery1.IsEmpty;
        btnAdicionar.Enabled := False;
      end
      else
        ShowMessage('Nenhuma alteração para salvar');
    end
    else
      ShowMessage('DataModule não está disponível');
  except
    on E: Exception do
    begin
      ShowMessage('Erro ao salvar registro: ' + E.Message);
      if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
        DataModule4.FDQuery1.Cancel;
    end;
  end;
end;

procedure TForm2.btnDeleteClick(Sender: TObject);
begin
  try
    if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
    begin
      if not DataModule4.FDQuery1.IsEmpty then
      begin
        if MessageDlg('Tem certeza que deseja excluir este registro?',
                     mtConfirmation, [mbYes, mbNo], 0) = mrYes then
        begin
          DataModule4.FDQuery1.Delete;
          ShowMessage('Registro excluído com sucesso!');
          AtualizarStatusBar;

          // Atualizar estados dos botões
          btnDelete.Enabled := not DataModule4.FDQuery1.IsEmpty;
          btnAbrir.Enabled := not DataModule4.FDQuery1.IsEmpty;
        end;
      end
      else
        ShowMessage('Nenhum registro selecionado para excluir');
    end
    else
      ShowMessage('DataModule não está disponível');
  except
    on E: Exception do
      ShowMessage('Erro ao excluir registro: ' + E.Message);
  end;
end;

procedure TForm2.btnAbrirClick(Sender: TObject);
begin
  try
    if Assigned(DataModule4) and Assigned(DataModule4.FDQuery1) then
    begin
      if not DataModule4.FDQuery1.IsEmpty then
      begin
        DataModule4.FDQuery1.Edit;
        btnAdicionar.Enabled := True;
        btnDelete.Enabled := False;
        btnNovo.Enabled := False;
        StatusBar1.SimpleText := 'Modo edição - Altere os dados e clique em Salvar';
      end
      else
        ShowMessage('Nenhum registro selecionado para editar');
    end
    else
      ShowMessage('DataModule não está disponível');
  except
    on E: Exception do
      ShowMessage('Erro ao abrir registro para edição: ' + E.Message);
  end;
end;

procedure TForm2.DBGrid1DblClick(Sender: TObject);
begin
  // Ao dar duplo clique no grid, abre o registro para edição
  btnAbrirClick(Sender);
end;

procedure TForm2.Letras1Click(Sender: TObject);
begin
  Form1.Show;
end;

procedure TForm2.Playlists1Click(Sender: TObject);
begin
  Form2.Show;
end;

procedure TForm2.Relatrios1Click(Sender: TObject);
begin
  Form3.Show;
end;

end.
