unit Ufrm_Repertorio;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.ComCtrls, Vcl.ExtCtrls, Vcl.Buttons, Vcl.DBCtrls, Vcl.Menus,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat;

type
  TFrm_Repertorio = class(TForm)
    DBGrid1: TDBGrid;
    Btn_EditarMusica: TButton;
    Edt_AdicionaMusica: TEdit;
    Btn_Deletar: TButton;
    Btn_Salvar: TButton;
    StatusBar1: TStatusBar;
    DBNavigator1: TDBNavigator;
    Label1: TLabel;
    Btn_Novo_Musica: TButton;
    DataSource1: TDataSource;
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    FDQuery2: TFDQuery;
    procedure Btn_Novo_MusicaClick(Sender: TObject);
    procedure Btn_SalvarClick(Sender: TObject);
    procedure Btn_DeletarClick(Sender: TObject);
    procedure Btn_EditarMusicaClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_Repertorio: TFrm_Repertorio;

implementation

{$R *.dfm}

uses UData_Module;

procedure TFrm_Repertorio.Btn_DeletarClick(Sender: TObject);
begin
  if not FDQuery2.IsEmpty then
  begin
    FDQuery2.Edit;
    FDQuery2.FieldByName('titulo').AsString := Edt_AdicionaMusica.Text;
    FDQuery2.Post;
    FDQuery2.Refresh;
    ShowMessage('Título da música deletado com sucesso.');
  end
  else
    ShowMessage('Nenhum registro selecionado.');
end;


procedure TFrm_Repertorio.Btn_EditarMusicaClick(Sender: TObject);
begin
  if not FDQuery2.IsEmpty then
  begin
    FDQuery2.Edit;
    FDQuery2.FieldByName('titulo').AsString := Edt_AdicionaMusica.Text;
    FDQuery2.Post;
    FDQuery2.Refresh;
    ShowMessage('Título da música editado com sucesso.');
    Edt_AdicionaMusica.Clear;
  end
  else
    ShowMessage('Nenhum registro selecionado.');
end;


procedure TFrm_Repertorio.Btn_Novo_MusicaClick(Sender: TObject);
begin
  if not FDQuery2.IsEmpty then
   begin
     ShowMessage('Digite o Título da música');
     Edt_AdicionaMusica.SetFocus;
     EXIT;
   end;

    FDQuery2.Append;
    FDQuery2.FieldByName('titulo').AsString := Edt_AdicionaMusica.Text;
    FDQuery2.Post;
    FDQuery2.Refresh;
    ShowMessage('Título da música adicionado com sucesso.');
    Edt_AdicionaMusica.Clear;

end;



procedure TFrm_Repertorio.Btn_SalvarClick(Sender: TObject);
begin
 Try
    if FDQuery2.State in [dsEdit,dsInsert] then
    begin
      if Edt_AdicionaMusica.Text = '' then
      begin
        ShowMessage('Digite o título da música');
        Edt_AdicionaMusica.SetFocus;
        Exit;
      end;

      FDQuery2.FieldByName('titulo').AsString := Trim(Edt_AdicionaMusica.Text);
      FDQuery2.Post;
      FDQuery2.Refresh;
      ShowMessage('Alterações salvas com sucesso.');
      Edt_AdicionaMusica.Clear;
    end
    else
      ShowMessage('Nenhuma alteração pendente para salvar.');
  except
    on E: Exception do
    begin
      FDQuery2.Cancel;
      ShowMessage('Erro ao salvar: ' + E.Message);
    end;
  end;
end;

end.
